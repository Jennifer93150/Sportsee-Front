{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { MockedAPI } from \"../hooks/useMockedApi\";\nconst BASE_URL = \"http://localhost:3000\";\nconst ACTIVITY_BY_KIND = {\n  1: \"Cardio\",\n  2: \"Energie\",\n  3: \"Endurance\",\n  4: \"Force\",\n  5: \"Vitesse\",\n  6: \"Intensité\"\n};\nexport function useSportSeeApi(service, userId) {\n  _s();\n\n  /** ici le param service sera par ex \"daily-activity\" \n   * (liste ds fonction getEndpointByService) \n   */\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const endpoints = {\n    \"user\": `user/${userId}`,\n    \"daily-activity\": `user/${userId}/activity`,\n    \"average-sessions\": `user/${userId}/average-sessions`,\n    \"performance\": `user/${userId}/performance`,\n    \"score\": `user/${userId}`\n  }; //const endpoint = getEndpointByService(service, userId);\n\n  let endpoint;\n  useEffect(() => {\n    for (let i in endpoints) {\n      let value = endpoints[i];\n\n      if (i === service) {\n        endpoint = value;\n      }\n    }\n\n    if (!endpoint) {\n      /** a voir comment faire ici pr return les données mocked */\n      // const mockedApi = new MockedAPI();\n      // return mockedApi;\n      return;\n    }\n\n    setIsLoading(true);\n    fetch(`${BASE_URL}/${endpoint}`).then(res => res.json()).then(data => {\n      const extractedData = getDataByService(data, service);\n      setData(extractedData);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setError(true);\n    });\n  }, [service, userId, endpoint]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n}\n\n_s(useSportSeeApi, \"WJYBqn2c+jk5gbHkf/rp07sHMmE=\");\n\nfunction getEndpointByService(service, userId) {\n  switch (service) {\n    case \"activities\":\n      return `user/${userId}/performance`;\n\n    case \"average-sessions\":\n      return `user/${userId}/average-sessions`;\n\n    case \"daily-activity\":\n      return `user/${userId}/activity`;\n\n    case \"firstName\":\n      return `user/${userId}`;\n\n    case \"key-data\":\n      return `user/${userId}`;\n\n    case \"today-score\":\n      return `user/${userId}`;\n\n    default:\n      return null;\n  }\n}\n\nfunction getDataByService(data, service) {\n  if (data) {\n    switch (service) {\n      case \"performance\":\n        return getActivities(data.data.data);\n\n      case \"average-sessions\":\n        return getAverageSessions(data.data.sessions);\n\n      case \"daily-activity\":\n        return getDailyActivity(data.data.sessions);\n      // case \"firstName\":\n      //   return getFirstName(data);\n\n      case \"user\":\n        return getKeyData(data);\n\n      case \"score\":\n        return getTodayScore(data);\n\n      default:\n        console.error(`getDataByService error: service \"${service}\" is not defined.`);\n        return;\n    }\n  }\n\n  console.error(\"getDataByService error: no data to process.\");\n  return;\n}\n\nexport function getDefaultActivities() {\n  const activities = [];\n\n  for (let key in ACTIVITY_BY_KIND) {\n    activities.push({\n      activity: ACTIVITY_BY_KIND[key],\n      value: 0\n    });\n  }\n\n  return activities;\n}\n\nfunction getActivities(userData) {\n  const activities = [];\n\n  if (userData) {\n    // //{1: 'cardio', 2: 'energy', 3: 'endurance', 4: 'strength', 5: 'speed', 6: 'intensity'}\n    // console.log(userData)\n    // // 1, 2, 3 ...\n    // console.log(userData.data)\n    // for(let item of userData.data){\n    //   console.log(item.kind)\n    //   /** si  item.kind = */\n    // }\n    for (let item of userData) {\n      console.log(item, item.kind, item.value); // for(let item in userData.data){\n      //   console.log(item)\n      //   /** si  item.kind = */\n      // }\n\n      activities.push({\n        activity: ACTIVITY_BY_KIND[item.kind],\n        value: item.value\n      });\n    }\n\n    return activities;\n  }\n\n  return getDefaultActivities();\n}\n\nexport function getDefaultAverageSessions() {\n  const averageSessions = [{\n    day: \"L\",\n    sessionLength: 0\n  }, {\n    day: \"M\",\n    sessionLength: 0\n  }, {\n    day: \"M\",\n    sessionLength: 0\n  }, {\n    day: \"J\",\n    sessionLength: 0\n  }, {\n    day: \"V\",\n    sessionLength: 0\n  }, {\n    day: \"S\",\n    sessionLength: 0\n  }, {\n    day: \"D\",\n    sessionLength: 0\n  }];\n  return averageSessions;\n}\n\nfunction getAverageSessions(userData) {\n  let averageSessions = getDefaultAverageSessions();\n\n  for (let index in userData) {\n    averageSessions[index].sessionLength = userData[index].sessionLength;\n  }\n\n  return averageSessions;\n}\n\nexport function getDefaultDailyActivity() {\n  const dailyActivity = [];\n  let date = new Date(Date.now()); // eslint-disable-next-line no-unused-vars\n\n  for (let _ of \"1234567\") {\n    let dateFr = new Intl.DateTimeFormat(\"fr\").format(date);\n    dailyActivity.push({\n      day: dateFr.slice(0, 5),\n      kilogram: 0,\n      calories: 0\n    });\n    date.setDate(date.getDate() - 1);\n  }\n\n  dailyActivity.reverse();\n  return dailyActivity;\n}\n\nfunction getDailyActivity(userData) {\n  if (userData) {\n    const dailyActivity = [];\n\n    for (let item of userData) {\n      // eslint-disable-next-line no-unused-vars\n      const [yyyy, mm, dd] = item.day.split(\"-\");\n      dailyActivity.push({\n        day: `${dd}/${mm}`,\n        kilogram: item.kilogram,\n        calories: item.calories\n      });\n    }\n\n    return dailyActivity;\n  }\n\n  return getDefaultDailyActivity();\n}\n/**\n * @param {string} userData\n * @returns {string} user first name\n */\n// function getFirstName(userData) {\n//   return userData === \"can not get user\"\n//     ? \"unknown user\"\n//     : userData.data.userInfos.firstName;\n// }\n\n\nexport function getDefaultKeyData() {\n  return {\n    calorieCount: 0,\n    proteinCount: 0,\n    carbohydrateCount: 0,\n    lipidCount: 0\n  };\n}\n\nfunction getKeyData(userData) {\n  return userData === \"can not get user\" ? getDefaultKeyData() : userData.data.keyData;\n}\n\nfunction getTodayScore(userData) {\n  console.log(userData);\n  return userData === \"can not get user\" ? 0 || userData : userData.data.todayScore;\n}","map":{"version":3,"names":["useEffect","useState","MockedAPI","BASE_URL","ACTIVITY_BY_KIND","useSportSeeApi","service","userId","data","setData","isLoading","setIsLoading","error","setError","endpoints","endpoint","i","value","fetch","then","res","json","extractedData","getDataByService","catch","err","console","log","getEndpointByService","getActivities","getAverageSessions","sessions","getDailyActivity","getKeyData","getTodayScore","getDefaultActivities","activities","key","push","activity","userData","item","kind","getDefaultAverageSessions","averageSessions","day","sessionLength","index","getDefaultDailyActivity","dailyActivity","date","Date","now","_","dateFr","Intl","DateTimeFormat","format","slice","kilogram","calories","setDate","getDate","reverse","yyyy","mm","dd","split","getDefaultKeyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","keyData","todayScore"],"sources":["/Users/jenniferbouhid/Desktop/sportsee/front-app/src/hooks/useSportSeeApi.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { MockedAPI } from \"../hooks/useMockedApi\";\nconst BASE_URL = \"http://localhost:3000\";\n\nconst ACTIVITY_BY_KIND = {\n  1: \"Cardio\",\n  2: \"Energie\",\n  3: \"Endurance\",\n  4: \"Force\",\n  5: \"Vitesse\",\n  6: \"Intensité\",\n};\n\n\nexport function useSportSeeApi(service, userId) {\n    /** ici le param service sera par ex \"daily-activity\" \n     * (liste ds fonction getEndpointByService) \n     */\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const endpoints ={\n    \"user\" : `user/${userId}`, \n    \"daily-activity\" : `user/${userId}/activity`, \n    \"average-sessions\": `user/${userId}/average-sessions`,\n    \"performance\" : `user/${userId}/performance`,\n    \"score\" : `user/${userId}`\n  }\n  \n  //const endpoint = getEndpointByService(service, userId);\n  let endpoint;\n  useEffect(() => {\n    \n    for(let i in endpoints){\n        let value = endpoints[i];\n        if(i === service){\n            endpoint = value;\n        }\n    }\n\n    if (!endpoint) {\n      /** a voir comment faire ici pr return les données mocked */\n      // const mockedApi = new MockedAPI();\n      // return mockedApi;\n      return;\n    }\n    \n    setIsLoading(true);\n\n    fetch(`${BASE_URL}/${endpoint}`)\n        .then(res =>res.json())\n        .then((data) => {\n            const extractedData = getDataByService(data, service);\n            setData(extractedData)\n            setIsLoading(false)\n        })\n        .catch ((err) =>{\n            console.log(err)\n            setError(true)\n        })\n   \n  }, [service, userId, endpoint]);\n\n  return { data, isLoading, error };\n}\n\n\nfunction getEndpointByService(service, userId) {\n  switch (service) {\n    case \"activities\":\n      return `user/${userId}/performance`;\n\n    case \"average-sessions\":\n      return `user/${userId}/average-sessions`;\n\n    case \"daily-activity\":\n      return `user/${userId}/activity`;\n\n    case \"firstName\":\n      return `user/${userId}`;\n\n    case \"key-data\":\n      return `user/${userId}`;\n\n    case \"today-score\":\n      return `user/${userId}`;\n\n    default:\n      return null;\n  }\n}\n\n\nfunction getDataByService(data, service) {\n  if (data) {\n    switch (service) {\n      case \"performance\":\n        return getActivities(data.data.data);\n\n      case \"average-sessions\":\n        return getAverageSessions(data.data.sessions);\n\n      case \"daily-activity\":\n        return getDailyActivity(data.data.sessions);\n\n      // case \"firstName\":\n      //   return getFirstName(data);\n\n      case \"user\":\n        return getKeyData(data);\n\n      case \"score\":\n        return getTodayScore(data);\n\n      default:\n        console.error(\n          `getDataByService error: service \"${service}\" is not defined.`\n        );\n        return;\n    }\n  }\n\n  console.error(\"getDataByService error: no data to process.\");\n  return;\n}\n\n\nexport function getDefaultActivities() {\n  const activities = [];\n\n  for (let key in ACTIVITY_BY_KIND) {\n    activities.push({\n      activity: ACTIVITY_BY_KIND[key],\n      value: 0,\n    });\n  }\n\n  return activities;\n}\n\n\nfunction getActivities(userData) {\n  const activities = [];\n  if (userData) {\n    // //{1: 'cardio', 2: 'energy', 3: 'endurance', 4: 'strength', 5: 'speed', 6: 'intensity'}\n    // console.log(userData)\n    // // 1, 2, 3 ...\n    // console.log(userData.data)\n    // for(let item of userData.data){\n    //   console.log(item.kind)\n    //   /** si  item.kind = */\n    // }\n    \n    for (let item of userData) {\n      console.log(item, item.kind, item.value)\n      // for(let item in userData.data){\n      //   console.log(item)\n      //   /** si  item.kind = */\n      // }\n      \n      activities.push({\n        activity: ACTIVITY_BY_KIND[item.kind],\n        value: item.value,\n      });\n    }\n\n    return activities;\n  }\n\n  return getDefaultActivities();\n}\n\n\nexport function getDefaultAverageSessions() {\n  const averageSessions = [\n    {\n      day: \"L\",\n      sessionLength: 0,\n    },\n    {\n      day: \"M\",\n      sessionLength: 0,\n    },\n    {\n      day: \"M\",\n      sessionLength: 0,\n    },\n    {\n      day: \"J\",\n      sessionLength: 0,\n    },\n    {\n      day: \"V\",\n      sessionLength: 0,\n    },\n    {\n      day: \"S\",\n      sessionLength: 0,\n    },\n    {\n      day: \"D\",\n      sessionLength: 0,\n    },\n  ];\n\n  return averageSessions;\n}\n\n\nfunction getAverageSessions(userData) {\n  let averageSessions = getDefaultAverageSessions();\n\n  for (let index in userData) {\n    averageSessions[index].sessionLength = userData[index].sessionLength;\n  }\n\n  return averageSessions;\n}\n\n\nexport function getDefaultDailyActivity() {\n  const dailyActivity = [];\n\n  let date = new Date(Date.now());\n\n  // eslint-disable-next-line no-unused-vars\n  for (let _ of \"1234567\") {\n    let dateFr = new Intl.DateTimeFormat(\"fr\").format(date);\n\n    dailyActivity.push({\n      day: dateFr.slice(0, 5),\n      kilogram: 0,\n      calories: 0,\n    });\n\n    date.setDate(date.getDate() - 1);\n  }\n\n  dailyActivity.reverse();\n\n  return dailyActivity;\n}\n\n\nfunction getDailyActivity(userData) {\n  if (userData) {\n    const dailyActivity = [];\n\n    for (let item of userData) {\n      // eslint-disable-next-line no-unused-vars\n      const [yyyy, mm, dd] = item.day.split(\"-\");\n\n      dailyActivity.push({\n        day: `${dd}/${mm}`,\n        kilogram: item.kilogram,\n        calories: item.calories,\n      });\n    }\n\n    return dailyActivity;\n  }\n\n  return getDefaultDailyActivity();\n}\n\n/**\n * @param {string} userData\n * @returns {string} user first name\n */\n// function getFirstName(userData) {\n//   return userData === \"can not get user\"\n//     ? \"unknown user\"\n//     : userData.data.userInfos.firstName;\n// }\n\n\nexport function getDefaultKeyData() {\n  return {\n    calorieCount: 0,\n    proteinCount: 0,\n    carbohydrateCount: 0,\n    lipidCount: 0,\n  };\n}\n\n\nfunction getKeyData(userData) {\n  \n  return userData === \"can not get user\"\n    ? getDefaultKeyData()\n    : userData.data.keyData;\n}\n\n\nfunction getTodayScore(userData) {\n  console.log(userData)\n  return userData === \"can not get user\" ? 0 || userData: userData.data.todayScore;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}