{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferbouhid/Desktop/Sportsee/Sportsee-Front/src/services/FacadePattern.js\";\nimport { MockedData } from \"./useMockedData\";\nimport { useSportSeeApi } from \"./useSportSeeApi\";\nimport { useMockedData } from \"../datas/data\";\nimport { Error } from \"../pages/Error\";\n/**\n * recovery of api data or mocked data if the back is not available\n * @param {string} service \n * @param {number} userId \n * @returns {array.Object|Object|undefined}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FacadePattern(service, userId) {\n  //const {data, error, isLoading } = useSportSeeApi(service, userId);\n\n  /**\n   * Use mocked data if api access unavailable \n   */\n  if (!useMockedData) {\n    console.log(useMockedData);\n    const mockedData = new MockedData();\n    return mockedData.getDataMockedByService(service, userId);\n  } else if (!data) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  console.log(data === \"\");\n  return {\n    data,\n    error,\n    isLoading\n  };\n}\n_c = FacadePattern;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacadePattern\");","map":{"version":3,"names":["MockedData","useSportSeeApi","useMockedData","Error","FacadePattern","service","userId","console","log","mockedData","getDataMockedByService","data","error","isLoading"],"sources":["/Users/jenniferbouhid/Desktop/Sportsee/Sportsee-Front/src/services/FacadePattern.js"],"sourcesContent":["import { MockedData } from \"./useMockedData\";\nimport { useSportSeeApi } from \"./useSportSeeApi\";\nimport { useMockedData } from \"../datas/data\";\nimport { Error } from \"../pages/Error\";\n\n/**\n * recovery of api data or mocked data if the back is not available\n * @param {string} service \n * @param {number} userId \n * @returns {array.Object|Object|undefined}\n */\nexport function FacadePattern(service, userId) {\n    \n    //const {data, error, isLoading } = useSportSeeApi(service, userId);\n    \n    /**\n     * Use mocked data if api access unavailable \n     */\n    if( !useMockedData ) {\n        console.log(useMockedData)\n        const mockedData = new MockedData();\n        return mockedData.getDataMockedByService(service, userId);\n    }else if(!data){\n        return <Error/>\n    }\n   console.log(data===\"\")\n    return {data, error, isLoading };\n}\n\n"],"mappings":";AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,MAAhC,EAAwC;EAE3C;;EAEA;AACJ;AACA;EACI,IAAI,CAACJ,aAAL,EAAqB;IACjBK,OAAO,CAACC,GAAR,CAAYN,aAAZ;IACA,MAAMO,UAAU,GAAG,IAAIT,UAAJ,EAAnB;IACA,OAAOS,UAAU,CAACC,sBAAX,CAAkCL,OAAlC,EAA2CC,MAA3C,CAAP;EACH,CAJD,MAIM,IAAG,CAACK,IAAJ,EAAS;IACX,oBAAO,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACFJ,OAAO,CAACC,GAAR,CAAYG,IAAI,KAAG,EAAnB;EACC,OAAO;IAACA,IAAD;IAAOC,KAAP;IAAcC;EAAd,CAAP;AACH;KAhBeT,a"},"metadata":{},"sourceType":"module"}