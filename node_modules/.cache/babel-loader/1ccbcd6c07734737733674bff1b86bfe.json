{"ast":null,"code":"import { USER_ACTIVITY, USER_AVERAGE_SESSIONS, USER_MAIN_DATA, USER_PERFORMANCE } from \"../datas/data\";\nconst ACTIVITY_BY_KIND = {\n  1: \"Cardio\",\n  2: \"Energie\",\n  3: \"Endurance\",\n  4: \"Force\",\n  5: \"Vitesse\",\n  6: \"Intensité\"\n};\nexport class MockedAPI {\n  /**\n   * @param {number} userId\n   * @returns {string}\n   */\n  getFirstNameById(userId) {\n    for (let user of USER_MAIN_DATA) {\n      if (user.id === userId) {\n        return user.userInfos.firstName;\n      }\n    }\n\n    return \"Utilisateur inconnu\";\n  } // /**\n  //  * @param {number} userId\n  //  * @returns {Object}\n  //  */\n  // getKeyDataById(userId) {\n  //   for (let user of USER_MAIN_DATA) {\n  //     if (user.id === userId) {\n  //       return user.keyData;\n  //     }\n  //   }\n  //   return this.defaultKeyData;\n  // }\n\n  /**\n  * @param {number} userId\n  * @returns {Array}\n  */\n\n\n  getDailyActivitiesById(userId) {\n    for (let user of USER_ACTIVITY) {\n      if (user.userId === userId) {\n        return user.sessions;\n      }\n    }\n  }\n  /**\n   * @param {number} userId\n   * @returns {Array}\n   */\n\n\n  getAverageSessionsById(userId) {\n    for (let user of USER_AVERA) {\n      if (user.userId === userId) {\n        return user.sessions;\n      }\n    }\n  }\n\n}","map":{"version":3,"names":["USER_ACTIVITY","USER_AVERAGE_SESSIONS","USER_MAIN_DATA","USER_PERFORMANCE","ACTIVITY_BY_KIND","MockedAPI","getFirstNameById","userId","user","id","userInfos","firstName","getDailyActivitiesById","sessions","getAverageSessionsById","USER_AVERA"],"sources":["/Users/jenniferbouhid/Desktop/sportsee/front-app/src/hooks/hooksMockedApi.jsx"],"sourcesContent":["import {\n    USER_ACTIVITY,\n    USER_AVERAGE_SESSIONS,\n    USER_MAIN_DATA,\n    USER_PERFORMANCE,\n  } from \"../datas/data\";\n\n  \n  const ACTIVITY_BY_KIND = {\n    1: \"Cardio\",\n    2: \"Energie\",\n    3: \"Endurance\",\n    4: \"Force\",\n    5: \"Vitesse\",\n    6: \"Intensité\",\n  };\n  \n  export class MockedAPI {\n    /**\n     * @param {number} userId\n     * @returns {string}\n     */\n    getFirstNameById(userId) {\n      for (let user of USER_MAIN_DATA) {\n        if (user.id === userId) {\n          return user.userInfos.firstName;\n        }\n      }\n  \n      return \"Utilisateur inconnu\";\n    }\n  \n    // /**\n    //  * @param {number} userId\n    //  * @returns {Object}\n    //  */\n    // getKeyDataById(userId) {\n    //   for (let user of USER_MAIN_DATA) {\n    //     if (user.id === userId) {\n    //       return user.keyData;\n    //     }\n    //   }\n    //   return this.defaultKeyData;\n    // }\n  \n     /**\n     * @param {number} userId\n     * @returns {Array}\n     */\n      getDailyActivitiesById(userId) {\n        for (let user of USER_ACTIVITY) {\n          if (user.userId === userId) {\n            return user.sessions\n          }\n        }\n      }\n    \n      /**\n       * @param {number} userId\n       * @returns {Array}\n       */\n      getAverageSessionsById(userId) {\n          for (let user of USER_AVERA) {\n            if (user.userId === userId) {\n              return user.sessions\n            }\n          }\n      }\n}\n  "],"mappings":"AAAA,SACIA,aADJ,EAEIC,qBAFJ,EAGIC,cAHJ,EAIIC,gBAJJ,QAKS,eALT;AAQE,MAAMC,gBAAgB,GAAG;EACvB,GAAG,QADoB;EAEvB,GAAG,SAFoB;EAGvB,GAAG,WAHoB;EAIvB,GAAG,OAJoB;EAKvB,GAAG,SALoB;EAMvB,GAAG;AANoB,CAAzB;AASA,OAAO,MAAMC,SAAN,CAAgB;EACrB;AACJ;AACA;AACA;EACIC,gBAAgB,CAACC,MAAD,EAAS;IACvB,KAAK,IAAIC,IAAT,IAAiBN,cAAjB,EAAiC;MAC/B,IAAIM,IAAI,CAACC,EAAL,KAAYF,MAAhB,EAAwB;QACtB,OAAOC,IAAI,CAACE,SAAL,CAAeC,SAAtB;MACD;IACF;;IAED,OAAO,qBAAP;EACD,CAboB,CAerB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEC;AACL;AACA;AACA;;;EACMC,sBAAsB,CAACL,MAAD,EAAS;IAC7B,KAAK,IAAIC,IAAT,IAAiBR,aAAjB,EAAgC;MAC9B,IAAIQ,IAAI,CAACD,MAAL,KAAgBA,MAApB,EAA4B;QAC1B,OAAOC,IAAI,CAACK,QAAZ;MACD;IACF;EACF;EAED;AACN;AACA;AACA;;;EACMC,sBAAsB,CAACP,MAAD,EAAS;IAC3B,KAAK,IAAIC,IAAT,IAAiBO,UAAjB,EAA6B;MAC3B,IAAIP,IAAI,CAACD,MAAL,KAAgBA,MAApB,EAA4B;QAC1B,OAAOC,IAAI,CAACK,QAAZ;MACD;IACF;EACJ;;AAlDkB"},"metadata":{},"sourceType":"module"}