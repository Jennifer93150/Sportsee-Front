{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferbouhid/Desktop/Sportsee/Sportsee-Front/src/services/FacadePattern.js\",\n    _s = $RefreshSig$();\n\nimport { MockedData } from \"./useMockedData\";\nimport { useSportSeeApi } from \"./useSportSeeApi\";\nimport { Error } from \"../pages/Error\";\n/**\n * recovery of api data or mocked data if the back is not available\n * @param {string} service \n * @param {number} userId \n * @returns {array.Object||Error()}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FacadePattern(service, userId) {\n  _s();\n\n  let getMockedData;\n  const {\n    data,\n    isLoading,\n    error\n  } = useSportSeeApi(service, userId);\n  /**\n   * If api access unavailable use mocked data\n   */\n\n  if (!error && !isLoading) {\n    return data;\n  } else if (error || isLoading) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this); // const mockedData = new MockedData();\n    // getMockedData = mockedData.getDataMockedByService(service, userId);\n    // console.log(getMockedData)\n    // return getMockedData;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FacadePattern, \"Np2pnhKmTNfXYn4VRAI9rUUo5lY=\", false, function () {\n  return [useSportSeeApi];\n});\n\n_c = FacadePattern;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacadePattern\");","map":{"version":3,"names":["MockedData","useSportSeeApi","Error","FacadePattern","service","userId","getMockedData","data","isLoading","error"],"sources":["/Users/jenniferbouhid/Desktop/Sportsee/Sportsee-Front/src/services/FacadePattern.js"],"sourcesContent":["import { MockedData } from \"./useMockedData\";\nimport { useSportSeeApi } from \"./useSportSeeApi\";\nimport { Error } from \"../pages/Error\";\n\n/**\n * recovery of api data or mocked data if the back is not available\n * @param {string} service \n * @param {number} userId \n * @returns {array.Object||Error()}\n */\nexport function FacadePattern(service, userId) {\n    let getMockedData;\n    const {data, isLoading, error} = useSportSeeApi(service, userId);\n    /**\n     * If api access unavailable use mocked data\n     */\n    \nif(!error && !isLoading){\n    return data;\n\n}else if(error || isLoading) {\n    return <Error/>\n    // const mockedData = new MockedData();\n    // getMockedData = mockedData.getDataMockedByService(service, userId);\n    // console.log(getMockedData)\n    // return getMockedData;\n}\n return <Error/>\n\n    \n}\n\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,MAAhC,EAAwC;EAAA;;EAC3C,IAAIC,aAAJ;EACA,MAAM;IAACC,IAAD;IAAOC,SAAP;IAAkBC;EAAlB,IAA2BR,cAAc,CAACG,OAAD,EAAUC,MAAV,CAA/C;EACA;AACJ;AACA;;EAEA,IAAG,CAACI,KAAD,IAAU,CAACD,SAAd,EAAwB;IACpB,OAAOD,IAAP;EAEH,CAHD,MAGM,IAAGE,KAAK,IAAID,SAAZ,EAAuB;IACzB,oBAAO,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAAP,CADyB,CAEzB;IACA;IACA;IACA;EACH;;EACA,oBAAO,QAAC,KAAD;IAAA;IAAA;IAAA;EAAA,QAAP;AAGA;;GApBeL,a;UAEqBF,c;;;KAFrBE,a"},"metadata":{},"sourceType":"module"}