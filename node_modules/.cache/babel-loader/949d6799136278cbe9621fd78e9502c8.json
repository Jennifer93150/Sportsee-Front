{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferbouhid/Desktop/Sportsee/Sportsee-Front/src/services/FacadePattern.js\",\n    _s = $RefreshSig$();\n\nimport { MockedData } from \"./useMockedData\";\nimport { useSportSeeApi } from \"./useSportSeeApi\";\nimport { useMockedData } from \"../datas/data\";\nimport { Error } from \"../pages/Error\";\n/**\n * recovery of api data or mocked data if the back is not available\n * @param {string} service \n * @param {number} userId \n * @returns {array.Object|Object}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FacadePattern(service, userId) {\n  _s();\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useSportSeeApi(service, userId);\n  console.log(error, isLoading, data);\n  /**\n   * Use mocked data if api access unavailable \n   */\n\n  if (data === undefined) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (useMockedData || isLoading) {\n    const mockedData = new MockedData();\n    return mockedData.getDataMockedByService(service, userId);\n  }\n\n  return data;\n}\n\n_s(FacadePattern, \"pEye4Ve7gRCy/RxQe5VUxmDC0NE=\", false, function () {\n  return [useSportSeeApi];\n});\n\n_c = FacadePattern;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacadePattern\");","map":{"version":3,"names":["MockedData","useSportSeeApi","useMockedData","Error","FacadePattern","service","userId","data","isLoading","error","console","log","undefined","mockedData","getDataMockedByService"],"sources":["/Users/jenniferbouhid/Desktop/Sportsee/Sportsee-Front/src/services/FacadePattern.js"],"sourcesContent":["import { MockedData } from \"./useMockedData\";\nimport { useSportSeeApi } from \"./useSportSeeApi\";\nimport { useMockedData } from \"../datas/data\";\nimport { Error } from \"../pages/Error\";\n\n/**\n * recovery of api data or mocked data if the back is not available\n * @param {string} service \n * @param {number} userId \n * @returns {array.Object|Object}\n */\nexport function FacadePattern(service, userId) {\n    \n    const { data, isLoading, error} = useSportSeeApi(service, userId);\n    console.log(error, isLoading, data)\n    /**\n     * Use mocked data if api access unavailable \n     */\n    if(data === undefined){\n        return <Error/>\n    }\n    if( useMockedData || isLoading ) {\n        const mockedData = new MockedData();\n        return mockedData.getDataMockedByService(service, userId);\n    }\n\n    return data\n}\n\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,MAAhC,EAAwC;EAAA;;EAE3C,MAAM;IAAEC,IAAF;IAAQC,SAAR;IAAmBC;EAAnB,IAA4BR,cAAc,CAACI,OAAD,EAAUC,MAAV,CAAhD;EACAI,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmBD,SAAnB,EAA8BD,IAA9B;EACA;AACJ;AACA;;EACI,IAAGA,IAAI,KAAKK,SAAZ,EAAsB;IAClB,oBAAO,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,IAAIV,aAAa,IAAIM,SAArB,EAAiC;IAC7B,MAAMK,UAAU,GAAG,IAAIb,UAAJ,EAAnB;IACA,OAAOa,UAAU,CAACC,sBAAX,CAAkCT,OAAlC,EAA2CC,MAA3C,CAAP;EACH;;EAED,OAAOC,IAAP;AACH;;GAhBeH,a;UAEsBH,c;;;KAFtBG,a"},"metadata":{},"sourceType":"module"}