{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferbouhid/Desktop/Sportsee/Sportsee-Front/src/services/FacadePattern.js\",\n    _s = $RefreshSig$();\n\nimport { MockedData } from \"./useMockedData\";\nimport { useSportSeeApi } from \"./useSportSeeApi\";\nimport { Error } from \"../pages/Error\";\n/**\n * recovery of api data or mocked data if the back is not available\n * @param {string} service \n * @param {number} userId \n * @returns {array.Object}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FacadePattern(service, userId) {\n  _s();\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useSportSeeApi(service, userId);\n  /**\n   * If api access unavailable use mocked data\n   */\n\n  if (isLoading) {\n    console.log('cc');\n    const api = new MockedData();\n    return api.getDataMockedByService(service, userId);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  return data;\n}\n\n_s(FacadePattern, \"Np2pnhKmTNfXYn4VRAI9rUUo5lY=\", false, function () {\n  return [useSportSeeApi];\n});\n\n_c = FacadePattern;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacadePattern\");","map":{"version":3,"names":["MockedData","useSportSeeApi","Error","FacadePattern","service","userId","data","isLoading","error","console","log","api","getDataMockedByService"],"sources":["/Users/jenniferbouhid/Desktop/Sportsee/Sportsee-Front/src/services/FacadePattern.js"],"sourcesContent":["import { MockedData } from \"./useMockedData\";\nimport { useSportSeeApi } from \"./useSportSeeApi\";\nimport { Error } from \"../pages/Error\";\n\n/**\n * recovery of api data or mocked data if the back is not available\n * @param {string} service \n * @param {number} userId \n * @returns {array.Object}\n */\nexport function FacadePattern(service, userId) {\n    \n    const {data, isLoading, error} = useSportSeeApi(service, userId);\n    \n    /**\n     * If api access unavailable use mocked data\n     */\n    if (isLoading) {\n        console.log('cc')\n        const api = new MockedData();\n        return api.getDataMockedByService(service, userId);\n    }else if(error){\n        return <Error/>\n    }\n    \n    return data;\n}\n\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,MAAhC,EAAwC;EAAA;;EAE3C,MAAM;IAACC,IAAD;IAAOC,SAAP;IAAkBC;EAAlB,IAA2BP,cAAc,CAACG,OAAD,EAAUC,MAAV,CAA/C;EAEA;AACJ;AACA;;EACI,IAAIE,SAAJ,EAAe;IACXE,OAAO,CAACC,GAAR,CAAY,IAAZ;IACA,MAAMC,GAAG,GAAG,IAAIX,UAAJ,EAAZ;IACA,OAAOW,GAAG,CAACC,sBAAJ,CAA2BR,OAA3B,EAAoCC,MAApC,CAAP;EACH,CAJD,MAIM,IAAGG,KAAH,EAAS;IACX,oBAAO,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,OAAOF,IAAP;AACH;;GAhBeH,a;UAEqBF,c;;;KAFrBE,a"},"metadata":{},"sourceType":"module"}