{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferbouhid/Desktop/sportsee/front-app/src/components/Performance.jsx\";\nimport PropTypes from \"prop-types\";\n/** Styles */\n\nimport styled from \"styled-components\";\nimport { color } from \"../utils/style/styleVariables\";\n/** Recharts */\n\nimport { PolarAngleAxis, PolarGrid, Radar, RadarChart, ResponsiveContainer } from \"recharts\";\n/** Datas */\n\nimport { FacadePattern } from \"../hooks/FacadePattern\"; // import { MockedAPI } from \"../hooks/useMockedApi\";\n// import {\n//   defaultActivities,\n//   useSportSeeApi,\n// } from \"../hooks/useSportSeeApi\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTIVITIES_ORDER_IN_CHART = [\"Intensité\", \"Vitesse\", \"Force\", \"Endurance\", \"Energie\", \"Cardio\"];\nexport function Performance(_ref) {\n  let {\n    userId\n  } = _ref;\n  const data = FacadePattern(userId, \"performance\");\n  console;\n  const performances = data.getPerformancesById(userId); // const { data, isLoading, error } = useSportSeeApi(\"performance\", userId);\n  // let performances = data;\n  // if (error || isLoading) {\n  //   const api = new MockedAPI()\n  //   performances = api.getPerformancesById(userId);\n  // }\n\n  const orderedActivities = [];\n\n  for (let activity of ACTIVITIES_ORDER_IN_CHART) {\n    for (let item of performances) {\n      if (item.activity === activity) {\n        orderedActivities.push({\n          activity: activity,\n          value: item.value\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(PerformancesWrapper, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(RadarChart, {\n        data: orderedActivities,\n        outerRadius: window.innerWidth > 1340 ? \"70%\" : \"60%\",\n        children: [/*#__PURE__*/_jsxDEV(PolarGrid, {\n          radialLines: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n          dataKey: \"activity\",\n          stroke: \"white\",\n          dy: 4,\n          tickLine: false,\n          tick: {\n            fontSize: 12,\n            fontWeight: 500\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radar, {\n          dataKey: \"value\",\n          fill: `${color.primary500}`,\n          fillOpacity: 0.7,\n          stroke: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_c = Performance;\nPerformance.propTypes = {\n  userId: PropTypes.number.isRequired\n};\nconst PerformancesWrapper = styled.div`\n  background: ${color.neutral800};\n`;\n_c2 = PerformancesWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Performance\");\n$RefreshReg$(_c2, \"PerformancesWrapper\");","map":{"version":3,"names":["PropTypes","styled","color","PolarAngleAxis","PolarGrid","Radar","RadarChart","ResponsiveContainer","FacadePattern","ACTIVITIES_ORDER_IN_CHART","Performance","userId","data","console","performances","getPerformancesById","orderedActivities","activity","item","push","value","window","innerWidth","fontSize","fontWeight","primary500","propTypes","number","isRequired","PerformancesWrapper","div","neutral800"],"sources":["/Users/jenniferbouhid/Desktop/sportsee/front-app/src/components/Performance.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\n\n/** Styles */\nimport styled from \"styled-components\";\nimport { color } from \"../utils/style/styleVariables\";\n\n/** Recharts */\nimport {\n  PolarAngleAxis,\n  PolarGrid,\n  Radar,\n  RadarChart,\n  ResponsiveContainer,\n} from \"recharts\";\n\n/** Datas */\nimport { FacadePattern } from \"../hooks/FacadePattern\";\n// import { MockedAPI } from \"../hooks/useMockedApi\";\n// import {\n//   defaultActivities,\n//   useSportSeeApi,\n// } from \"../hooks/useSportSeeApi\";\n\n\nconst ACTIVITIES_ORDER_IN_CHART = [\n  \"Intensité\",\n  \"Vitesse\",\n  \"Force\",\n  \"Endurance\",\n  \"Energie\",\n  \"Cardio\",\n];\n\nexport function Performance({ userId }) {\n  \n  const data = FacadePattern(userId, \"performance\");\n  console\n  const performances = data.getPerformancesById(userId);\n  \n  // const { data, isLoading, error } = useSportSeeApi(\"performance\", userId);\n  // let performances = data;\n  // if (error || isLoading) {\n  //   const api = new MockedAPI()\n  //   performances = api.getPerformancesById(userId);\n  // }\n\n  const orderedActivities = [];\n\n  for (let activity of ACTIVITIES_ORDER_IN_CHART) {\n    for (let item of performances) {\n      if (item.activity === activity) {\n        orderedActivities.push({\n          activity: activity,\n          value: item.value,\n        });\n      }\n    }\n  }\n\n  return (\n    <PerformancesWrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <RadarChart\n          data={orderedActivities}\n          outerRadius={window.innerWidth > 1340 ? \"70%\" : \"60%\"}\n        >\n          <PolarGrid radialLines={false} />\n          <PolarAngleAxis\n            dataKey=\"activity\"\n            stroke=\"white\"\n            dy={4}\n            tickLine={false}\n            tick={{\n              fontSize: 12,\n              fontWeight: 500,\n            }}\n          />\n          <Radar\n            dataKey=\"value\"\n            fill={`${color.primary500}`}\n            fillOpacity={0.7}\n            stroke=\"transparent\"\n          />\n        </RadarChart>\n      </ResponsiveContainer>\n    </PerformancesWrapper>\n  );\n}\n\nPerformance.propTypes = {\n  userId: PropTypes.number.isRequired,\n};\n\nconst PerformancesWrapper = styled.div`\n  background: ${color.neutral800};\n`;\n"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,+BAAtB;AAEA;;AACA,SACEC,cADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,mBALF,QAMO,UANP;AAQA;;AACA,SAASC,aAAT,QAA8B,wBAA9B,C,CACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,yBAAyB,GAAG,CAChC,WADgC,EAEhC,SAFgC,EAGhC,OAHgC,EAIhC,WAJgC,EAKhC,SALgC,EAMhC,QANgC,CAAlC;AASA,OAAO,SAASC,WAAT,OAAiC;EAAA,IAAZ;IAAEC;EAAF,CAAY;EAEtC,MAAMC,IAAI,GAAGJ,aAAa,CAACG,MAAD,EAAS,aAAT,CAA1B;EACAE,OAAO;EACP,MAAMC,YAAY,GAAGF,IAAI,CAACG,mBAAL,CAAyBJ,MAAzB,CAArB,CAJsC,CAMtC;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMK,iBAAiB,GAAG,EAA1B;;EAEA,KAAK,IAAIC,QAAT,IAAqBR,yBAArB,EAAgD;IAC9C,KAAK,IAAIS,IAAT,IAAiBJ,YAAjB,EAA+B;MAC7B,IAAII,IAAI,CAACD,QAAL,KAAkBA,QAAtB,EAAgC;QAC9BD,iBAAiB,CAACG,IAAlB,CAAuB;UACrBF,QAAQ,EAAEA,QADW;UAErBG,KAAK,EAAEF,IAAI,CAACE;QAFS,CAAvB;MAID;IACF;EACF;;EAED,oBACE,QAAC,mBAAD;IAAA,uBACE,QAAC,mBAAD;MAAqB,KAAK,EAAC,MAA3B;MAAkC,MAAM,EAAC,MAAzC;MAAA,uBACE,QAAC,UAAD;QACE,IAAI,EAAEJ,iBADR;QAEE,WAAW,EAAEK,MAAM,CAACC,UAAP,GAAoB,IAApB,GAA2B,KAA3B,GAAmC,KAFlD;QAAA,wBAIE,QAAC,SAAD;UAAW,WAAW,EAAE;QAAxB;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE,QAAC,cAAD;UACE,OAAO,EAAC,UADV;UAEE,MAAM,EAAC,OAFT;UAGE,EAAE,EAAE,CAHN;UAIE,QAAQ,EAAE,KAJZ;UAKE,IAAI,EAAE;YACJC,QAAQ,EAAE,EADN;YAEJC,UAAU,EAAE;UAFR;QALR;UAAA;UAAA;UAAA;QAAA,QALF,eAeE,QAAC,KAAD;UACE,OAAO,EAAC,OADV;UAEE,IAAI,EAAG,GAAEtB,KAAK,CAACuB,UAAW,EAF5B;UAGE,WAAW,EAAE,GAHf;UAIE,MAAM,EAAC;QAJT;UAAA;UAAA;UAAA;QAAA,QAfF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD;KAtDef,W;AAwDhBA,WAAW,CAACgB,SAAZ,GAAwB;EACtBf,MAAM,EAAEX,SAAS,CAAC2B,MAAV,CAAiBC;AADH,CAAxB;AAIA,MAAMC,mBAAmB,GAAG5B,MAAM,CAAC6B,GAAI;AACvC,gBAAgB5B,KAAK,CAAC6B,UAAW;AACjC,CAFA;MAAMF,mB"},"metadata":{},"sourceType":"module"}